/*
 * FispanComLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package cloud.fispan.dev1.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * PaymentTypeEnum to be used.
 */
public enum PaymentTypeEnum {
    ACH,

    CHECK,

    CPA,

    EMT,

    RTP,

    VCC,

    POSITIVE_PAY,

    WIRE,

    SEPA,

    BACS,

    INTERNATIONAL_WIRE,

    INTERNATIONAL_ACH,

    ECHECK,

    A2A_TRANSFER;


    private static TreeMap<String, PaymentTypeEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        ACH.value = "ACH";
        CHECK.value = "CHECK";
        CPA.value = "CPA";
        EMT.value = "EMT";
        RTP.value = "RTP";
        VCC.value = "VCC";
        POSITIVE_PAY.value = "POSITIVE_PAY";
        WIRE.value = "WIRE";
        SEPA.value = "SEPA";
        BACS.value = "BACS";
        INTERNATIONAL_WIRE.value = "INTERNATIONAL_WIRE";
        INTERNATIONAL_ACH.value = "INTERNATIONAL_ACH";
        ECHECK.value = "ECHECK";
        A2A_TRANSFER.value = "A2A_TRANSFER";

        valueMap.put("ACH", ACH);
        valueMap.put("CHECK", CHECK);
        valueMap.put("CPA", CPA);
        valueMap.put("EMT", EMT);
        valueMap.put("RTP", RTP);
        valueMap.put("VCC", VCC);
        valueMap.put("POSITIVE_PAY", POSITIVE_PAY);
        valueMap.put("WIRE", WIRE);
        valueMap.put("SEPA", SEPA);
        valueMap.put("BACS", BACS);
        valueMap.put("INTERNATIONAL_WIRE", INTERNATIONAL_WIRE);
        valueMap.put("INTERNATIONAL_ACH", INTERNATIONAL_ACH);
        valueMap.put("ECHECK", ECHECK);
        valueMap.put("A2A_TRANSFER", A2A_TRANSFER);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static PaymentTypeEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of PaymentTypeEnum values to list of string values.
     * @param toConvert The list of PaymentTypeEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<PaymentTypeEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (PaymentTypeEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 