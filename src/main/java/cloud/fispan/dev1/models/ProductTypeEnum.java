/*
 * FispanComLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package cloud.fispan.dev1.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * ProductTypeEnum to be used.
 */
public enum ProductTypeEnum {
    PAYMENT,

    RECEIVABLE,

    LENDING,

    BANK_ACCOUNT_INFO,

    VALIDATION,

    FX_INFO,

    ENRICHMENT,

    REMITTANCE;


    private static TreeMap<String, ProductTypeEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        PAYMENT.value = "PAYMENT";
        RECEIVABLE.value = "RECEIVABLE";
        LENDING.value = "LENDING";
        BANK_ACCOUNT_INFO.value = "BANK_ACCOUNT_INFO";
        VALIDATION.value = "VALIDATION";
        FX_INFO.value = "FX_INFO";
        ENRICHMENT.value = "ENRICHMENT";
        REMITTANCE.value = "REMITTANCE";

        valueMap.put("PAYMENT", PAYMENT);
        valueMap.put("RECEIVABLE", RECEIVABLE);
        valueMap.put("LENDING", LENDING);
        valueMap.put("BANK_ACCOUNT_INFO", BANK_ACCOUNT_INFO);
        valueMap.put("VALIDATION", VALIDATION);
        valueMap.put("FX_INFO", FX_INFO);
        valueMap.put("ENRICHMENT", ENRICHMENT);
        valueMap.put("REMITTANCE", REMITTANCE);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static ProductTypeEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of ProductTypeEnum values to list of string values.
     * @param toConvert The list of ProductTypeEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<ProductTypeEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (ProductTypeEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 