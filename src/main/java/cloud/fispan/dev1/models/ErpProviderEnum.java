/*
 * FispanComLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package cloud.fispan.dev1.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * ErpProviderEnum to be used.
 */
public enum ErpProviderEnum {
    NONE,

    UNKNOWN,

    DUMMY,

    FRESHBOOKS,

    INTACCT,

    MYOB,

    NAVISION,

    NETSUITE,

    ORACLE,

    QUICKBOOKS,

    QUICKBOOKS_DESKTOP,

    SAGE50,

    SAP,

    MS_BUSINESS_CENTRAL,

    MS_BUSINESS_CENTRAL_ONPREM_14,

    TEST_ERP,

    XERO,

    ACUMATICA;


    private static TreeMap<String, ErpProviderEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        NONE.value = "NONE";
        UNKNOWN.value = "UNKNOWN";
        DUMMY.value = "DUMMY";
        FRESHBOOKS.value = "FRESHBOOKS";
        INTACCT.value = "INTACCT";
        MYOB.value = "MYOB";
        NAVISION.value = "NAVISION";
        NETSUITE.value = "NETSUITE";
        ORACLE.value = "ORACLE";
        QUICKBOOKS.value = "QUICKBOOKS";
        QUICKBOOKS_DESKTOP.value = "QUICKBOOKS_DESKTOP";
        SAGE50.value = "SAGE50";
        SAP.value = "SAP";
        MS_BUSINESS_CENTRAL.value = "MS_BUSINESS_CENTRAL";
        MS_BUSINESS_CENTRAL_ONPREM_14.value = "MS_BUSINESS_CENTRAL_ONPREM_14";
        TEST_ERP.value = "TEST_ERP";
        XERO.value = "XERO";
        ACUMATICA.value = "ACUMATICA";

        valueMap.put("NONE", NONE);
        valueMap.put("UNKNOWN", UNKNOWN);
        valueMap.put("DUMMY", DUMMY);
        valueMap.put("FRESHBOOKS", FRESHBOOKS);
        valueMap.put("INTACCT", INTACCT);
        valueMap.put("MYOB", MYOB);
        valueMap.put("NAVISION", NAVISION);
        valueMap.put("NETSUITE", NETSUITE);
        valueMap.put("ORACLE", ORACLE);
        valueMap.put("QUICKBOOKS", QUICKBOOKS);
        valueMap.put("QUICKBOOKS_DESKTOP", QUICKBOOKS_DESKTOP);
        valueMap.put("SAGE50", SAGE50);
        valueMap.put("SAP", SAP);
        valueMap.put("MS_BUSINESS_CENTRAL", MS_BUSINESS_CENTRAL);
        valueMap.put("MS_BUSINESS_CENTRAL_ONPREM_14", MS_BUSINESS_CENTRAL_ONPREM_14);
        valueMap.put("TEST_ERP", TEST_ERP);
        valueMap.put("XERO", XERO);
        valueMap.put("ACUMATICA", ACUMATICA);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static ErpProviderEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of ErpProviderEnum values to list of string values.
     * @param toConvert The list of ErpProviderEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<ErpProviderEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (ErpProviderEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 